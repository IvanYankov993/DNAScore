# Project: CNN single and multitask for DNA thermal Stability
This project involves the implementation of Convolutional Neural Networks (CNNs) on High-Performance Computing (HPC) infrastructure, focusing on single-task and multitask learning for DNA duplexes, particularly for properties such as dg, dh, ds, and Tm. The CNN is designed for efficient batch job submissions and parallel processing, generating a significant amount of data, which is managed through compression. Here's a more specific breakdown of the contents:

1. assets/
Description: Contains PNG images illustrating the model's performance on the test sets, based on 50-fold cross-validation (CV). These images report the mean and standard deviation of the predictions for better model evaluation.
Last Commit: "Add pngs" (Oct 1, 2024)
2. bin/
Description: Contains helper functions and binaries used during the development and execution phases. These files are temporary and are planned to be disposed of after the necessary tasks are complete.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
3. dev/
Description: This folder contains exploratory work aimed at extending the CNN architecture to handle four branches, rather than a single shared output structure. Each branch is specialized for different properties (dg, dh, ds, Tm) and allows for fully connected layers tailored to each property, adding flexibility and specialization in the neural network.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
4. Evaluation_lomzov.ipynb
Description: This notebook investigates the inner hyperparameter optimization loop, allowing for grid search over different CNN architectures and hyperparameters. It visualizes model performance on test sets and provides insights into the best-performing architectures. This serves as a critical tool for fine-tuning and improving the CNNâ€™s effectiveness.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
5. README.md
Description: The README provides an overview of the project, including instructions on how to set up the environment, run jobs, and interpret the results. It serves as a guide for users interacting with the code and submitting jobs on the HPC.
Last Commit: "Create README" (Oct 1, 2024)
6. Run_jobs-multitask.ipynb
Description: A notebook designed to submit batch jobs for multitask learning on the CNN. The architecture shares the entire neural network, except for four distinct output nodes tailored to specific properties. This script is optimized for batch job submission on an HPC, where independent tasks are efficiently handled, and scripts are generated dynamically for job submission and later moved to storage.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
7. Run_jobs.ipynb
Description: Similar in structure and code to Run_jobs-multitask.ipynb, but designed for single-task CNN job submissions. This script is used to submit independent jobs on the HPC and manages the creation and storage of job scripts in an efficient manner.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
8. environment.yaml
Description: This YAML file specifies the dependencies required for setting up the CNN environment, using Anaconda. The environment is tailored for TensorFlow, ensuring compatibility and reproducibility across different systems.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
9. environment_builds.yaml
Description: Another YAML file for configuring the environment, likely focused on constructing specific builds or configurations of the CNN setup. This might include additional dependencies or settings required for different stages of the project.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
10. tarfile.ipynb
Description: This notebook handles compressing the output from the large number of independent parallel jobs submitted on the HPC (around 2,000). The compression is necessary to manage the excessive number of output files, which can exceed 2 million. This script ensures the results are efficiently packaged for storage or further processing.
Last Commit: "Add CCN single and multitasks" (Oct 1, 2024)
